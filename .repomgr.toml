# when running a command arguments are passed to the shell
# via the -c flag. I haven't been able to get it to work without
# a shell, so this the implementation is a bit hacky  
shell = "bash"

[clone_directories]
# default directory for cloing if no matchers are found
default = "./.temp/projects/{{ .Repo.Name }}"
# matchers are checked in order, first match is used.
# supports glob style matches
matchers = [
  { match = "business/*", dir = "~/src/mealie-recipes/{{ .Name }}" },
  { match = "mealie-recipes/*", dir = "~/src/mealie-recipes/{{ .Name }}" },
]


[logs]
file = "./.temp/repomgr.log"
level = "debug"
color = true                 # ignored if json
format = "text"              # text or json

[database]
file = "./.temp/repomgr.db"
params = "_pragma=busy_timeout=2000&_pragma=journal_mode=WAL&_fk=1"

[[sources]]
type = "github"
username = "hay-kot"
organizations = ["mealie-recipes"]
# token properties have special syntax for environment variables
token = "env:REPOMGR_GH_TOKEN"

[key_bindings]
"ctrl-f" = { cmd = "finder {{ .CloneDir }}", desc = "open cloned folder" }
